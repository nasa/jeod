//=============================================================================
// Notices:
//
// Copyright Â© 2023 United States Government as represented by the Administrator
// of the National Aeronautics and Space Administration.  All Rights Reserved.
//
//
// Disclaimers:
//
// No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY WARRANTY OF
// ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED
// TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY
// IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR
// FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
// FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM TO THE
// SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER, CONSTITUTE AN
// ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT OF ANY RESULTS,
// RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY OTHER APPLICATIONS
// RESULTING FROM USE OF THE SUBJECT SOFTWARE.  FURTHER, GOVERNMENT AGENCY
// DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING THIRD-PARTY SOFTWARE,
// IF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES IT "AS IS."
//
// Waiver and Indemnity:  RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS AGAINST THE
// UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
// PRIOR RECIPIENT.  IF RECIPIENT'S USE OF THE SUBJECT SOFTWARE RESULTS IN ANY
// LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING FROM SUCH USE,
// INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S
// USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE
// UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
// PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW.  RECIPIENT'S SOLE REMEDY FOR
// ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL TERMINATION OF THIS
// AGREEMENT.
//
//=============================================================================
//
//
/*************     TRICK HEADER     ******************************************
DynamicsInitSimObject
Purpose:( This version of the JEOD dynamics object enables initialization only)
Assumptions:
 *  DYNAMICS represents the time interval between calls to environment-class
             jobs, and should be defined in the S_define according to the needs
             of the simulation
 * Order dependencies:  This file must be included after including the
             default priority settings file and the time S-module.
*****************************************************************************/
#ifndef SIM_OBJECT_DYNAMICS_INIT
#define SIM_OBJECT_DYNAMICS_INIT

// Include headers for classes that this class contains:
##include "dynamics/dyn_manager/include/dyn_manager.hh"
##include "dynamics/dyn_manager/include/dyn_manager_init.hh"
##include "environment/time/include/time_manager.hh"

class DynamicsInitSimObject: public Trick::SimObject
{
protected:
    // Reference to the external time manager.
    jeod::TimeManager & time_manager;

public:
    jeod::DynManager dyn_manager;
    jeod::DynManagerInit dyn_manager_init;

    // Constructor
    DynamicsInitSimObject(jeod::TimeManager & time_manager_in)
        : time_manager(time_manager_in)
    {
        P_MNGR("initialization") dyn_manager.initialize_model(dyn_manager_init, time_manager);
        P_MNGR_INIT_SIM("initialization") dyn_manager.initialize_simulation();
    }

    // Unimplemented copy constructor and assignment operator
    DynamicsInitSimObject(const DynamicsInitSimObject &) = delete;
    DynamicsInitSimObject & operator=(const DynamicsInitSimObject &) = delete;
};
#endif
