//=============================================================================
// Notices:
//
// Copyright Â© 2023 United States Government as represented by the Administrator
// of the National Aeronautics and Space Administration.  All Rights Reserved.
//
//
// Disclaimers:
//
// No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY WARRANTY OF
// ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED
// TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY
// IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR
// FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
// FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM TO THE
// SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER, CONSTITUTE AN
// ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT OF ANY RESULTS,
// RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY OTHER APPLICATIONS
// RESULTING FROM USE OF THE SUBJECT SOFTWARE.  FURTHER, GOVERNMENT AGENCY
// DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING THIRD-PARTY SOFTWARE,
// IF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES IT "AS IS."
//
// Waiver and Indemnity:  RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS AGAINST THE
// UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
// PRIOR RECIPIENT.  IF RECIPIENT'S USE OF THE SUBJECT SOFTWARE RESULTS IN ANY
// LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING FROM SUCH USE,
// INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S
// USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE
// UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
// PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW.  RECIPIENT'S SOLE REMEDY FOR
// ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL TERMINATION OF THIS
// AGREEMENT.
//
//=============================================================================
//
//
/*************     TRICK HEADER     ******************************************
Mars_MRO110B2_SimObject
Purpose:( This sim object models Mars with a MRO110B2 gravity model.
          It includes RNP as a necessary requisite for application of GGM02C)
*****************************************************************************/
#ifndef SIM_OBJECT_MARS_MRO110B2
#define SIM_OBJECT_MARS_MRO110B2

// Models
##include "environment/RNP/RNPMars/include/rnp_mars.hh"

// Default data
##include "environment/planet/data/include/mars.hh"
##include "environment/gravity/data/include/mars_MRO110B2.hh"
##include "environment/RNP/RNPMars/data/include/rnp_mars.hh"

#include "planet_generic.sm"
class Mars_MRO110B2_SimObject: public PlanetGenericSimObject
{
protected:
    // External references
    jeod::TimeTT & time_tt;

public:
    jeod::RNPMars rnp;

    // Default data
    jeod::Planet_mars_default_data mars_default_data;
    jeod::SphericalHarmonicsGravitySource_mars_MRO110B2_default_data mars_grav_default_data;
    jeod::RNPMars_rnp_mars_default_data rnp_default_data;

    // Constructor
    Mars_MRO110B2_SimObject(jeod::DynManager & dyn_manager_in, jeod::GravityManager & grav_in, jeod::TimeTT & tt_in)
        : PlanetGenericSimObject(dyn_manager_in, grav_in, mars_default_data, mars_grav_default_data),
          time_tt(tt_in)
    {
        //
        // Default data jobs
        //
        ("default_data") rnp_default_data.initialize(&rnp);

        //
        // Initialization jobs
        //
        P_ENV("initialization") rnp.initialize(dyn_manager);
        P_ENV("initialization") rnp.update_rnp(time_tt);

        //
        // Environment class jobs
        //
        (LOW_RATE_ENV, "environment") rnp.update_rnp(time_tt);

        //
        // Derivative class jobs
        //
        P_ENV("derivative") rnp.update_axial_rotation(time_tt);
    }

    Mars_MRO110B2_SimObject(const Mars_MRO110B2_SimObject &) = delete;
    Mars_MRO110B2_SimObject & operator=(const Mars_MRO110B2_SimObject &) = delete;
};
#endif
