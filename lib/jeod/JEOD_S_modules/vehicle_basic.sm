//=============================================================================
// Notices:
//
// Copyright Â© 2023 United States Government as represented by the Administrator
// of the National Aeronautics and Space Administration.  All Rights Reserved.
//
//
// Disclaimers:
//
// No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY WARRANTY OF
// ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED
// TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY
// IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR
// FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
// FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM TO THE
// SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER, CONSTITUTE AN
// ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT OF ANY RESULTS,
// RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY OTHER APPLICATIONS
// RESULTING FROM USE OF THE SUBJECT SOFTWARE.  FURTHER, GOVERNMENT AGENCY
// DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING THIRD-PARTY SOFTWARE,
// IF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES IT "AS IS."
//
// Waiver and Indemnity:  RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS AGAINST THE
// UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
// PRIOR RECIPIENT.  IF RECIPIENT'S USE OF THE SUBJECT SOFTWARE RESULTS IN ANY
// LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING FROM SUCH USE,
// INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S
// USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE
// UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
// PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW.  RECIPIENT'S SOLE REMEDY FOR
// ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL TERMINATION OF THIS
// AGREEMENT.
//
//=============================================================================
//
//
#include "Base/vehicle_baseline.sm"
VehicleBasicSimObject vehicle(dynamics.dyn_manager);

// Deprecated naming, included here for backward compatibility only:
// VehicleSimObject is now intended to be used for user-defined
// vehicle-sim-objects, including those defined by inheriting from the basic
// vehicle-sim-object.  Consequently, the name of JEOD-provided basic vehicle
// sim-object was changed from VehicleSimObject to VehicleBasicSimObject to
// more accurately represent the capabilities as basic and to release the name
// VehicleSimObject to the user to do with as they wish.
// However, that breaks backward compatibility with users who were previously
// content with this basic capbility and were instantiating it multiple times.
// So users who are satisfied with the capabilities of the VehicleBasicSimObject
// (i.e. users who include this file) will also get VehicleSimObject defined
// to be equivalent to VehicleBasicSimObject, thereby maintaining backward
// compatibility.
class VehicleSimObject : public VehicleBasicSimObject
{
public:
    VehicleSimObject(jeod::DynManager & dyn_mngr_in)
        : VehicleBasicSimObject(dyn_mngr_in)
    {
    }

    // Unimplemented copy constructor and assignment operator
    VehicleSimObject(const VehicleSimObject &) = delete;
    VehicleSimObject & operator=(const VehicleSimObject &) = delete;
};
