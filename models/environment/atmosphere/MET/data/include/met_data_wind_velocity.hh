//=============================================================================
// Notices:
//
// Copyright Â© 2023 United States Government as represented by the Administrator
// of the National Aeronautics and Space Administration.  All Rights Reserved.
//
//
// Disclaimers:
//
// No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY WARRANTY OF
// ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED
// TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY
// IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR
// FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR
// FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM TO THE
// SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER, CONSTITUTE AN
// ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT OF ANY RESULTS,
// RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY OTHER APPLICATIONS
// RESULTING FROM USE OF THE SUBJECT SOFTWARE.  FURTHER, GOVERNMENT AGENCY
// DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING THIRD-PARTY SOFTWARE,
// IF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES IT "AS IS."
//
// Waiver and Indemnity:  RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS AGAINST THE
// UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
// PRIOR RECIPIENT.  IF RECIPIENT'S USE OF THE SUBJECT SOFTWARE RESULTS IN ANY
// LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING FROM SUCH USE,
// INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S
// USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE
// UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
// PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW.  RECIPIENT'S SOLE REMEDY FOR
// ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL TERMINATION OF THIS
// AGREEMENT.
//
//=============================================================================
//
//
// Autogenerated for auto_src/environment__atmosphere__data__wind_velocity.cc
/******************************************************************************
Purpose:
  ()

Library dependencies:
  ((../src/data_met_wind_velocity.cc))
******************************************************************************/

#ifndef JEOD_WINDVELOCITY_WIND_VELOCITY_DEFAULT_DATA_H
#define JEOD_WINDVELOCITY_WIND_VELOCITY_DEFAULT_DATA_H

#include "utils/message/include/message_handler.hh"

//! Namespace jeod
namespace jeod
{

class WindVelocity;

class WindVelocity_wind_velocity_default_data
{
public:
    const static int num_layers = 12; /* trick_units(--) @n The number of layers in this default data set. */

    double omega_scale_fac[num_layers]{
        1.0, 1.1, 1.16, 1.21, 1.25, 1.3, 1.34, 1.38, 1.4, 1.405, 1.41, 1.4142136}; /* trick_units(--) @n Default
                                                                                      settings for omega_scale_fac*/

    double omega_scale_alt[num_layers]{180000.0,
                                       200000.0,
                                       220000.0,
                                       240000.0,
                                       260000.0,
                                       280000.0,
                                       300000.0,
                                       320000.0,
                                       340000.0,
                                       360000.0,
                                       380000.0,
                                       400000.0}; /* trick_units(--) @n Default settings for omega_scale_alt*/

    double omega{7.292115146706388e-5}; /* trick_units(rad/s) @n planetary rotation rate. */

    WindVelocity_wind_velocity_default_data() = default;
    void initialize(WindVelocity *);
    void initialize(WindVelocity &);
};

} // namespace jeod

#endif
